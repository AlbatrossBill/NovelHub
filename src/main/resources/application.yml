#--------------------------Configuration-------------------------
spring:
  application:
    name: novel2
  profiles:
    active: dev
  jackson:
    generator:
      # JSON serialisation returns all properties of type Number as String to avoid front-end data precision loss.
      # Since the Javascript standard requires that all number processing be done using 64-bit IEEE 754 floating point values.
      # The result is that some 64-bit integer values cannot be represented accurately (the trailing number is only 51 bits wide)
      write-numbers-as-strings: true
  servlet:
    multipart:
      # Maximum upload file size
      max-file-size: 5MB
server:
  port: 8888

--- #---------------------Database---------------------------
spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/novel_dev?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
#    url: jdbc:mysql://172.20.10.2:3306/novel_dev?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: 123456

--- #---------------------Middleware---------------------------
spring:
  data:
    # Redis 配置
    redis:
      host: 127.0.0.1
#      host: 172.20.10.2
      port: 6379
      password: 123456

--- #--------------------Interface documentation---------------------------
springdoc:
  api-docs:
    enabled: true

--- #----------------------Email configuration-----------------------------
#邮箱服务器
spring:
  mail:
    host: smtp.163.com
    #邮箱账户
    username: novelhub9900@163.com
    #邮箱第三方授权码
    password: YIZAOOCHLHOYXFEP
    #编码类型
    default-encoding: UTF-8
    port: 465
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: rue
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory
            fallback: false

--- #---------------------Custom configuration----------------------------
novel:
  # JWT Secret
  jwt:
    secret: E66559580A1ADF48CDD928516062F12E
  cors:
    # 允许跨域的域名
    allow-origins:
      - http://localhost:1024
      - http://localhost:8080
      - http://172.20.10.13:8080
      - http://172.20.10.13:1024
      - http://172.20.10.13:8888
  # XSS 过滤配置
  xss:
    # 过滤开关
    enabled: true
    # 排除链接
    excludes:
      - /system/notice/*

## 项目配置
#novel:
#  # 跨域配置
#  cors:
#    # 允许跨域的域名
#    allow-origins:
#      - http://localhost:1024
#      - http://127.0.0.1:1024
#      - http://127.0.0.1:8080
#      - http://127.0.0.1:80
#      - http://127.0.0.1
#      - http://localhost:8080
#      - http://localhost:80
#      - http://localhost
#  # JWT密钥
#  jwt:
#    secret: E66559580A1ADF48CDD928516062F12E
#  # XSS 过滤配置
#  xss:
#    # 过滤开关
#    enabled: true
#    # 排除链接
#    excludes:
#      - /system/notice/*
#  file:
#    # 文件上传配置
#    upload:
#      # 上传路径
#      path: D:/root/novel/upload